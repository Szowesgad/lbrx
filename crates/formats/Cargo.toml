[package]
name = "lbrx-formats"
version = "0.1.0"
edition = "2021"
authors = ["LibraxisAI Team"]
description = "Format conversion utilities for LBRX-MLX"
repository = "https://github.com/LibraxisAI/lbrx-mlx"
license = "MIT"
keywords = ["formats", "conversion", "safetensors", "gguf", "mlx"]

[dependencies]
# Core dependencies
lbrx-core = { path = "../core" }

# Format handling
bytemuck = { workspace = true }
half = { workspace = true }
memmap2 = { workspace = true }
thiserror = { workspace = true }
safetensors = { workspace = true, optional = true }

# I/O utilities
tokio = { version = "1.32", features = ["fs", "io-util"], optional = true }
async-compression = { version = "0.4", features = ["zstd", "snap"], optional = true }
zstd = "0.13"
snap = "1.1"
bincode = "1.3"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Parallel processing
rayon = { workspace = true }

# Logging and errors
log = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
tempfile = "3.8"
proptest = { workspace = true }
mockall = { workspace = true }

[features]
default = ["safetensors"]
safetensors = ["dep:safetensors"]
gguf = []
mlx = []
huggingface = []
async = ["tokio", "async-compression"]